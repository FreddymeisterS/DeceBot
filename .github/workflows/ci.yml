name: CI

on:
  - push

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macOS-latest

    steps:
      - name: Clone package
        uses: actions/checkout@v2

      - name: Setup environment
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      # - name: Install yarn
      #   run: npm install -g yarn

      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Run Unit Tests
        # Run test with xvfb for virtual display.
        uses: GabrielBB/xvfb-action@v1.2
        with:
          run: yarn test

      - name: Run e2e Tests
        uses: GabrielBB/xvfb-action@v1.2
        with:
          run: yarn e2e

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}

          # Release if commit is tagged with a version (eg v1.0.0)
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
